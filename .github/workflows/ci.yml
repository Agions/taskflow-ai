name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: TypeScript type check
      run: |
        echo "🔍 运行TypeScript类型检查..."
        npx tsc --noEmit --incremental --pretty --skipLibCheck
        
        if [ $? -eq 0 ]; then
          echo "✅ TypeScript类型检查通过"
        else
          echo "❌ TypeScript类型检查失败"
          exit 1
        fi
      
    - name: ESLint check
      run: npx eslint src --ext .ts
      continue-on-error: true
      
    - name: Run tests
      run: npm test
      continue-on-error: true
      
    - name: Build project
      run: npm run build
      
    - name: Test CLI functionality
      run: |
        # 测试CLI基本功能
        node bin/index.js --help
        node bin/index.js --version
        
        # 创建测试目录
        mkdir -p test-project
        cd test-project
        
        # 测试init命令
        node ../bin/index.js init --force
        
        # 验证生成的文件
        test -f .taskflow/config.json
        test -f .cursor/mcp.json
        test -f .cursor-rules
        
        echo "✅ CLI功能测试通过"

  publish-npm:
    name: Publish to NPM
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-docs:
    name: Deploy Documentation
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install docs dependencies
      run: |
        cd docs
        npm ci
        
    - name: Build documentation
      run: |
        cd docs
        npm run build
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/.vitepress/dist
        cname: taskflow-ai.dev

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: npx audit-ci --moderate

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Prettier check
      run: npx prettier --check "src/**/*.{ts,js,json,md}"
      continue-on-error: true
      
    - name: Generate test coverage
      run: npm run test:coverage
      continue-on-error: true
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true
