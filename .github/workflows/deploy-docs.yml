name: Deploy VitePress Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限以允许部署到GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.pages.outcome == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用lastUpdated，则不需要

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        continue-on-error: true

      - name: Check Pages Setup and Provide Instructions
        run: |
          if [ "${{ steps.pages.outcome }}" = "failure" ]; then
            echo "❌ GitHub Pages未启用或配置错误"
            echo ""
            echo "🚀 **解决方案**: 请按以下步骤启用GitHub Pages"
            echo ""
            echo "📋 **详细步骤**:"
            echo "1. 访问: https://github.com/${{ github.repository }}/settings/pages"
            echo "2. 在 'Source' 部分选择: 'GitHub Actions'"
            echo "3. 点击 'Save' 保存设置"
            echo "4. 等待几分钟后重新运行此工作流程"
            echo ""
            echo "🔗 **预期结果**: 文档将部署到 https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
            echo ""
            echo "⚠️ **注意**: 仓库必须是公开的才能使用免费的GitHub Pages"
            echo ""
            echo "🔄 继续构建以验证VitePress配置..."

            # 创建状态文件
            echo "pages_setup_failed" > pages_status.txt
          else
            echo "✅ GitHub Pages配置成功"
            echo "🎉 准备部署到: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
            echo "pages_setup_success" > pages_status.txt
          fi

      - name: Install dependencies
        run: |
          echo "📦 安装VitePress依赖..."
          cd docs
          npm ci
          echo "✅ 依赖安装完成"

      - name: Build with VitePress
        run: |
          echo "🔨 构建VitePress文档..."
          cd docs
          npm run build
          echo "✅ 文档构建完成"

          # 验证构建产物
          if [ -d ".vitepress/dist" ]; then
            echo "📊 构建产物大小:"
            du -sh .vitepress/dist
            echo "📁 构建产物内容:"
            ls -la .vitepress/dist
          else
            echo "❌ 构建产物目录不存在"
            exit 1
          fi

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist
        if: steps.pages.outcome == 'success'

      - name: Upload artifact for manual deployment
        uses: actions/upload-artifact@v4
        with:
          name: vitepress-docs-${{ github.sha }}
          path: docs/.vitepress/dist
          retention-days: 30
        if: steps.pages.outcome == 'failure'

      - name: Create deployment summary
        run: |
          echo "## 📚 VitePress文档构建报告" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.pages.outcome }}" = "success" ]; then
            echo "✅ **GitHub Pages配置**: 成功" >> $GITHUB_STEP_SUMMARY
            echo "🚀 **部署状态**: 准备自动部署" >> $GITHUB_STEP_SUMMARY
            echo "🔗 **预期URL**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **GitHub Pages配置**: 需要手动启用" >> $GITHUB_STEP_SUMMARY
            echo "📋 **解决方案**: [启用GitHub Pages](https://github.com/${{ github.repository }}/settings/pages)" >> $GITHUB_STEP_SUMMARY
            echo "📦 **备用方案**: 构建产物已上传为Artifact，可手动下载部署" >> $GITHUB_STEP_SUMMARY
            echo "📖 **详细指南**: 查看仓库根目录的 GITHUB_PAGES_SETUP_GUIDE.md" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **构建信息**:" >> $GITHUB_STEP_SUMMARY
          echo "- 构建时间: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js版本: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- VitePress版本: $(cd docs && npm list vitepress --depth=0)" >> $GITHUB_STEP_SUMMARY

  # 部署作业
  deploy:
    if: github.ref == 'refs/heads/main' && needs.build.outputs.pages_enabled == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment success notification
        run: |
          echo "🎉 文档已成功部署到GitHub Pages!"
          echo "🔗 访问地址: ${{ steps.deployment.outputs.page_url }}"
