# TaskFlow AI MCP Server - Docker MCP Registry Submission
# This file contains the metadata required for submitting TaskFlow AI to the Docker MCP Registry

apiVersion: v1
kind: MCPServer
metadata:
  name: taskflow-ai
  namespace: productivity
  labels:
    category: productivity
    subcategory: project-management
    type: ai-powered
    language: typescript
    transport: stdio
spec:
  # Basic Information
  displayName: "TaskFlow AI"
  description: "Intelligent PRD parsing, task management, and project orchestration MCP server with advanced AI capabilities"
  longDescription: |
    TaskFlow AI is a comprehensive Model Context Protocol (MCP) server that revolutionizes project management 
    through intelligent automation. It provides advanced PRD (Product Requirements Document) parsing, 
    sophisticated task management, and AI-powered project orchestration capabilities.

    Key Features:
    â€¢ ðŸ¤– AI-Powered PRD Parsing: Extract structured information from requirements documents using multiple AI models
    â€¢ ðŸ“‹ Advanced Task Management: Create, update, and organize tasks with dependencies and metadata
    â€¢ ðŸŽ¯ Intelligent Orchestration: Optimize project workflows with critical path analysis and parallel processing
    â€¢ ðŸ“Š Comprehensive Analytics: Generate detailed reports and performance metrics
    â€¢ ðŸ”„ Multiple AI Models: Support for Qwen, DeepSeek, Zhipu, Baichuan, Moonshot, and Yi models
    â€¢ ðŸš€ Enterprise-Ready: Scalable architecture with Docker support and production-grade features

  version: "1.0.0"
  author: "TaskFlow AI Team"
  maintainer: "agions@example.com"
  license: "MIT"
  
  # Repository Information
  repository:
    type: git
    url: "https://github.com/Agions/taskflow-ai"
    branch: main
    dockerfile: "Dockerfile.mcp"
  
  # Documentation
  documentation:
    homepage: "https://github.com/Agions/taskflow-ai"
    readme: "https://github.com/Agions/taskflow-ai/blob/main/README.md"
    changelog: "https://github.com/Agions/taskflow-ai/blob/main/CHANGELOG.md"
    examples: "https://github.com/Agions/taskflow-ai/blob/main/docs/examples"
  
  # Keywords and Tags
  keywords:
    - mcp
    - task-management
    - project-management
    - prd-parsing
    - ai-orchestration
    - productivity
    - planning
    - requirements
    - agile
    - automation
    - artificial-intelligence
    - workflow-optimization
  
  # Categories
  categories:
    primary: productivity
    secondary:
      - project-management
      - ai-tools
      - automation
      - planning
  
  # MCP Server Configuration
  server:
    # Transport Configuration
    transport:
      type: stdio
      fallback: http
      port: 3000
    
    # Capabilities
    capabilities:
      tools: true
      resources: true
      prompts: false
      sampling: false
    
    # Tools Provided
    tools:
      - name: parse_prd
        description: "Parse PRD documents and extract structured information"
        category: parsing
        complexity: medium
        
      - name: create_task
        description: "Create new project tasks with metadata"
        category: task-management
        complexity: low
        
      - name: list_tasks
        description: "List and filter project tasks"
        category: task-management
        complexity: low
        
      - name: update_task
        description: "Update existing tasks"
        category: task-management
        complexity: low
        
      - name: orchestrate_tasks
        description: "Perform intelligent task orchestration"
        category: orchestration
        complexity: high
        
      - name: get_project_status
        description: "Get comprehensive project analytics"
        category: analytics
        complexity: medium
        
      - name: generate_report
        description: "Generate various project reports"
        category: reporting
        complexity: medium
    
    # Resources Provided
    resources:
      - name: project_overview
        description: "Complete project overview"
        type: json
        
      - name: all_tasks
        description: "All project tasks"
        type: json
        
      - name: analytics_dashboard
        description: "Analytics dashboard"
        type: json
        
      - name: orchestration_status
        description: "Orchestration status"
        type: json
  
  # Installation and Deployment
  installation:
    # NPM Package
    npm:
      package: "taskflow-ai"
      command: "npx taskflow-ai mcp"
      
    # Docker Image
    docker:
      image: "taskflow-ai:latest"
      registry: "docker.io"
      command: ["node", "bin/index.js", "mcp"]
      
    # Requirements
    requirements:
      node: ">=18.0.0"
      memory: "512MB"
      disk: "100MB"
  
  # Configuration
  configuration:
    # Required Environment Variables
    required: []
    
    # Optional Environment Variables
    optional:
      - name: AI_MODEL
        description: "Default AI model for PRD parsing"
        type: string
        default: "qwen"
        enum: ["qwen", "deepseek", "zhipu", "baichuan", "moonshot", "yi"]
        
      - name: TASKFLOW_CONFIG_PATH
        description: "Path to TaskFlow AI configuration file"
        type: string
        
      - name: LOG_LEVEL
        description: "Logging level"
        type: string
        default: "info"
        enum: ["debug", "info", "warn", "error"]
        
      - name: TASKFLOW_DATA_DIR
        description: "Data directory path"
        type: string
        default: "/app/data"
        
      - name: TASKFLOW_LOG_DIR
        description: "Log directory path"
        type: string
        default: "/app/logs"
  
  # Usage Examples
  examples:
    - name: "Basic PRD Parsing"
      description: "Parse a simple PRD and extract tasks"
      code: |
        {
          "tool": "parse_prd",
          "arguments": {
            "content": "# Feature: User Authentication\n\n## Requirements\n- User login with email/password\n- Password reset functionality\n- Session management",
            "options": {
              "extractTasks": true,
              "generateAcceptanceCriteria": true
            }
          }
        }
    
    - name: "Task Orchestration"
      description: "Orchestrate tasks using agile methodology"
      code: |
        {
          "tool": "orchestrate_tasks",
          "arguments": {
            "preset": "agile_sprint",
            "config": {
              "enableCriticalPath": true,
              "enableParallelOptimization": true,
              "maxParallelTasks": 5
            }
          }
        }
    
    - name: "Project Status Report"
      description: "Generate a comprehensive status report"
      code: |
        {
          "tool": "generate_report",
          "arguments": {
            "type": "status",
            "format": "markdown",
            "includeCharts": true
          }
        }
  
  # Health and Monitoring
  health:
    endpoint: "/health"
    interval: 30
    timeout: 10
    retries: 3
  
  # Security
  security:
    runAsNonRoot: true
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  
  # Resource Limits
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  # Compliance and Quality
  compliance:
    mcpVersion: "1.0.0"
    dockerVersion: ">=20.10.0"
    securityScan: true
    vulnerabilityCheck: true
    
  # Support and Community
  support:
    documentation: "https://github.com/Agions/taskflow-ai/blob/main/docs"
    issues: "https://github.com/Agions/taskflow-ai/issues"
    discussions: "https://github.com/Agions/taskflow-ai/discussions"
    email: "support@taskflow-ai.com"
  
  # Maturity and Stability
  maturity:
    level: "stable"
    version: "1.0.0"
    lastUpdated: "2025-01-06"
    breaking_changes: false
